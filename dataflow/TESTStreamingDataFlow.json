{
	"name": "TESTStreamingDataFlow",
	"properties": {
		"type": "MappingDataFlow",
		"typeProperties": {
			"sources": [
				{
					"dataset": {
						"referenceName": "StreamingTransactions",
						"type": "DatasetReference"
					},
					"name": "TestStreamingData",
					"script": "source(output(\n\t\tTransactionID as string,\n\t\tCustomerID as string,\n\t\tMovieID as string,\n\t\tStreamStart as string,\n\t\tStreamEnd as string,\n\t\tCreatedDate as string,\n\t\tUpdatedDate as string\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false) ~> TestStreamingData"
				}
			],
			"sinks": [
				{
					"dataset": {
						"referenceName": "TestStreamingFinalParquet",
						"type": "DatasetReference"
					},
					"name": "FinalTestStreamingData",
					"script": "StreamEndAsDateTime sink(allowSchemaDrift: true,\n\tvalidateSchema: false) ~> FinalTestStreamingData"
				}
			],
			"transformations": [
				{
					"name": "StreamStartAsDateTime",
					"script": "AddUniqueCustomerID derive(StreamStart = toString(toDate(StreamStart), 'yyyy-MM-dd')) ~> StreamStartAsDateTime"
				},
				{
					"name": "AddSourceNameColumn",
					"script": "TestStreamingData derive(SourceName = 'Southridge') ~> AddSourceNameColumn"
				},
				{
					"name": "AddUniqueMovieID",
					"script": "AddSourceNameColumn derive(UniqueMovieID = SourceName+MovieID) ~> AddUniqueMovieID"
				},
				{
					"name": "AddUniqueOrderID",
					"script": "AddUniqueMovieID derive(UniqueOrderID = SourceName+TransactionID) ~> AddUniqueOrderID"
				},
				{
					"name": "AddUniqueCustomerID",
					"script": "AddUniqueOrderID derive(UniqueCustomerID = SourceName+CustomerID) ~> AddUniqueCustomerID"
				},
				{
					"name": "StreamEndAsDateTime",
					"script": "StreamStartAsDateTime derive(StreamEnd = toString(toDate(StreamEnd), 'yyyy-MM-dd')) ~> StreamEndAsDateTime"
				}
			]
		}
	}
}