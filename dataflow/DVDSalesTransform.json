{
	"name": "DVDSalesTransform",
	"properties": {
		"type": "MappingDataFlow",
		"typeProperties": {
			"sources": [
				{
					"dataset": {
						"referenceName": "OrderDetailsDVD",
						"type": "DatasetReference"
					},
					"name": "OrderDetailsSource",
					"script": "source(output(\n\t\tOrderDetailID as string,\n\t\tOrderID as string,\n\t\tMovieID as string,\n\t\tQuantity as long,\n\t\tUnitCost as float,\n\t\tLineNumber as long,\n\t\tCreatedDate as string,\n\t\tUpdatedDate as string\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tdateFormats: ['yyyy-MM-dd'],\n\tpreferredIntegralType: 'long',\n\tpreferredFractionalType: 'float') ~> OrderDetailsSource"
				},
				{
					"dataset": {
						"referenceName": "OrdersCSVDVDSales",
						"type": "DatasetReference"
					},
					"name": "OrderSalesSource",
					"script": "source(output(\n\t\tProp_0 as string\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false) ~> OrderSalesSource"
				}
			],
			"sinks": [
				{
					"dataset": {
						"referenceName": "SinkedDVDSales",
						"type": "DatasetReference"
					},
					"name": "DataSink",
					"script": "DerivedColumns sink(input(\n\t\tSourceName as string,\n\t\tCustomerID as string,\n\t\tLastName as string,\n\t\tFirstName as string,\n\t\tAddressLine1 as string,\n\t\tAddressLine2 as string,\n\t\tCity as string,\n\t\tState as string,\n\t\tZipCode as string,\n\t\tPhoneNumber as string,\n\t\tCreatedDate as date,\n\t\tUpdatedDate as date\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false) ~> DataSink"
				}
			],
			"transformations": [
				{
					"name": "Select1",
					"script": "OrderSalesSource select(mapColumn(\n\t\tProp_0\n\t))~> Select1"
				},
				{
					"name": "DerivedSourceName",
					"script": "OrderDetailsSource derive(SourceName = 'Southridge') ~> DerivedSourceName"
				},
				{
					"name": "DerivedColumns",
					"script": "DerivedSourceName derive(UniqueOrderID = concat(OrderDetailID, SourceName),\n\t\tUniqueMovieID = concat(MovieID, SourceName)) ~> DerivedColumns"
				}
			]
		}
	}
}